import React, { useState } from 'react';

const CharacterAnimator = (props) => {
  const [color, setColor] = useState(props.color);

  const fill = {
    path_one: props.theme
      ? !color
        ? props.primaryWhite || '#ffffff'
        : '#00005B'
      : !color
      ? props.primaryDark || '#000000'
      : '#00005B',
    path_two: props.theme
      ? !color
        ? props.primaryDark || '#000000'
        : '#9999FF'
      : !color
      ? props.primaryWhite || '#ffffff'
      : '#9999FF',
  };

  const handleMouseOver = () => {
    if (props.hover === 'colorize') {
      setColor(true);
    } else {
      setColor(false);
    }
  };

  const handleMouseLeave = () => {
    if (props.hover === 'colorize') {
      setColor(false);
    } else {
      setColor(true);
    }
  };

  return (
    <div
      className='react-logos-wrapper'
      onMouseEnter={props.hover ? handleMouseOver : ''}
      onMouseLeave={props.hover ? handleMouseLeave : ''}
    >
      <svg
        className={props.transition}
        width={props.width || 128}
        height={props.height || 128}
        viewBox='0 0 128 128'
        fill='none'
        xmlns='http://www.w3.org/2000/svg'
      >
        <rect
          className={props.transition}
          width='128'
          height='128'
          fill={fill.path_one}
        />
        <path
          className={props.transition}
          d='M60.8075 91.0576L60.7664 91.0743C58.0521 92.1822 54.3209 92.7144 49.6194 92.7144C41.9476 92.7144 35.5505 90.4134 30.4809 85.78C25.3665 81.1055 22.8677 74.0837 22.8677 64.8496C22.8677 56.6467 25.3556 49.9977 30.3796 44.9737C35.4551 39.8981 42.1298 37.3823 50.335 37.3823C55.1654 37.3823 58.8554 37.9335 61.3263 39.1023C61.6243 39.2131 61.8633 39.4184 62.0176 39.7012C62.1695 39.9798 62.2191 40.2951 62.2191 40.6003V47.5173C62.2191 47.7067 62.2041 47.9005 62.1566 48.0785C62.1114 48.2478 62.0152 48.4841 61.7906 48.6526C61.5373 48.8426 61.2493 48.8533 61.0241 48.7971C60.8392 48.7508 60.6769 48.6572 60.5448 48.5625C58.0306 47.1649 54.7474 46.4419 50.653 46.4419C45.503 46.4419 41.5072 48.0321 38.5831 51.1578L38.5793 51.1618C35.6602 54.2319 34.1535 58.6544 34.1535 64.5316C34.1535 68.1232 34.6739 71.2147 35.695 73.821C36.7752 76.4425 38.1691 78.3722 39.8519 79.659C41.6015 80.9969 43.3903 81.9656 45.2184 82.5754C47.1098 83.1885 49.0793 83.4958 51.13 83.4958C54.4477 83.4958 57.4922 83.0045 60.2696 82.0298C60.5099 81.9309 60.9374 81.8169 61.3208 82.0908C61.6975 82.3599 61.7421 82.8044 61.7421 83.0565V89.4169C61.7421 90.1017 61.4549 90.6876 60.846 91.0355L60.8075 91.0576Z'
          fill={fill.path_two}
        />
        <path
          className={props.transition}
          d='M71.3107 91.6098C71.0675 91.3319 71.0048 90.9844 71.0048 90.689V35.1143C71.0048 34.822 71.0949 34.4887 71.3792 34.245C71.6437 34.0183 71.969 33.9635 72.2351 33.9635H80.8218C81.0879 33.9635 81.4133 34.0183 81.6777 34.245C81.962 34.4887 82.0521 34.822 82.0521 35.1143V53.7309C84.7766 52.053 87.8439 51.2163 91.2371 51.2163C95.0584 51.2163 98.303 52.4962 100.926 55.0609C103.664 57.6315 104.95 61.8044 104.95 67.3938V90.689C104.95 91.0049 104.87 91.3656 104.593 91.6425C104.317 91.9194 103.956 91.9989 103.64 91.9989H95.2124C94.8965 91.9989 94.5358 91.9194 94.2589 91.6425C93.982 91.3656 93.9025 91.0049 93.9025 90.689V67.2348C93.9025 64.7105 93.3909 62.9421 92.4815 61.8139C91.5945 60.7135 90.2421 60.117 88.2954 60.117C85.9639 60.117 83.8903 60.8651 82.0521 62.3793V90.7685C82.0521 91.0579 81.9793 91.3987 81.7156 91.6624C81.452 91.9261 81.1112 91.9989 80.8218 91.9989H72.2351C71.9207 91.9989 71.5689 91.9048 71.3107 91.6098Z'
          fill={fill.path_two}
        />
      </svg>
    </div>
  );
};

export default CharacterAnimator;
